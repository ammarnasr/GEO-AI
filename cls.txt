PS C:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI> & C:/Users/Edin/anaconda3/envs/amazon/python.exe "c:/Users/Edin/OneDrive - University of Edinburgh/Study/GEO-AI/utils_advance.py" STACK stack_low_cloud 10
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
Country Sudan, split train: (1803, 103)
Country Sudan, split test: (464, 103)
Country Iran, split train: (1620, 103)
Country Iran, split test: (466, 103)
Country Afghanistan, split train: (1620, 89)
Country Afghanistan, split test: (1612, 89)
C:\Users\Edin\anaconda3\envs\amazon\lib\site-packages\pyproj\crs\crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  in_crs_string = _prepare_from_proj_string(in_crs_string)
C:\Users\Edin\anaconda3\envs\amazon\lib\site-packages\pyproj\crs\crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  in_crs_string = _prepare_from_proj_string(in_crs_string)
train_gdf: (1620, 89), test_gdf: (1612, 89)
train_original: (500, 6), test_original: (500, 5)
train_gdf: (1620, 89), test_gdf: (1612, 89)
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 500/500 [00:10<00:00, 45.74it/s]
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 500/500 [00:10<00:00, 45.61it/s] 
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\train.py:519: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf['Target'] = eq_targets
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\train.py:524: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf['Target'] = eq_targets
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time=  59.6s
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time=  59.7s
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 1.0min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.830 total time= 1.6min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.800 total time= 1.7min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.870 total time= 1.8min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 2.0min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.850 total time= 2.1min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 2.1min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.830 total time= 2.2min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.840 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.880 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.800 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.820 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.830 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.850 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.820 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.800 total time= 1.0min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.810 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.850 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.810 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.850 total time=  57.3s
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.840 total time= 1.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time=  58.1s
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.840 total time=  58.4s
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learni[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.840 total time=  58.4s
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.840 total time= 1.7min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 1.7min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.9min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time= 3.4min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 4.2min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.870 total time= 4.3min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 5.2min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.810 total time= 4.9min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.820 total time= 4.8min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 5.7min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 5.4min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.770 total time= 5.8min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 5.7min
best_params: {'xgb__n_estimators': 80, 'xgb__max_depth': 10, 'stack_method': 'predict_proba', 'rf__n_estimators': 80, 'rf__max_depth': 14, 'passthrough': False, 'n_jobs': -1, 'mlp__learning_rate_init': 0.005, 'mlp__hidden_layer_sizes': (500, 500), 'final_estimator__solver': 'liblinear', 'final_estimator__C': 2.0, 'ab__n_estimators': 1000, 'ab__learning_rate': 1.2}
best_score: 0.8379999999999999
best_model: StackingClassifier(estimators=[('rf',
                                RandomForestClassifier(max_depth=14,
                                                       n_estimators=80,
                                                       n_jobs=-1)),
                               ('xgb',
                                GradientBoostingClassifier(max_depth=10,
                                                           n_estimators=80)),
                               ('ab',
                                AdaBoostClassifier(learning_rate=1.2,
                                                   n_estimators=1000,
                                                   random_state=0)),
                               ('mlp',
                                MLPClassifier(hidden_layer_sizes=(500, 500),
                                              learning_rate_init=0.005,
                                              max_iter=1000))],
                   final_estimator=LogisticRegression(C=2.0,
                                                      solver='liblinear'),
                   n_jobs=-1, stack_method='predict_proba')
accuracy: 0.9636363636363636
confusion_matrix: [[239  10]
 [  8 238]]
classification_report:               precision    recall  f1-score   support

           0       0.97      0.96      0.96       249
           1       0.96      0.97      0.96       246

    accuracy                           0.96       495
   macro avg       0.96      0.96      0.96       495

accuracy: 0.9636363636363636
confusion_matrix: [[239  10]
 [  8 238]]
classification_report: {'0': {'precision': 0.9676113360323887, 'recall': 0.9598393574297188, 'f1-score': 0.9637096774193548, 'support': 249}, '1': {'precision': 0.9596774193548387, 'recall': 0.967479674796748, 'f1-score': 0.9635627530364373, 'support': 246}, 'accuracy': 0.9636363636363636, 'macro avg': {'precision': 0.9636443776936137, 'recall': 0.9636595161132334, 'f1-score': 0.9636362152278961, 'support': 495}, 'weighted avg': {'precision': 0.9636684198653639, 'recall': 0.9636363636363636, 'f1-score': 0.9636366604532989, 'support': 495}}
test_gdf and test_with_ids are not None
Saving classifier to: Afghanistan_stack_low_cloud_classifier.joblib
Saving submession: Afghanistan_stack_low_cloud_submession.csv
PS C:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI> & C:/Users/Edin/anaconda3/envs/amazon/python.exe "c:/Users/Edin/OneDrive - University of Edinburgh/Study/GEO-AI/utils_advance.py" STACK stack_low_cloud 500 
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:122: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf_low_cloud[c] = train_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\utils_advance.py:124: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf_low_cloud[c] = test_gdf_old[c]
Country Sudan, split train: (1803, 103)
Country Sudan, split test: (464, 103)
Country Iran, split train: (1620, 103)
Country Iran, split test: (466, 103)
Country Afghanistan, split train: (1620, 89)
Country Afghanistan, split test: (1612, 89)
C:\Users\Edin\anaconda3\envs\amazon\lib\site-packages\pyproj\crs\crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  in_crs_string = _prepare_from_proj_string(in_crs_string)
C:\Users\Edin\anaconda3\envs\amazon\lib\site-packages\pyproj\crs\crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  in_crs_string = _prepare_from_proj_string(in_crs_string)
train_gdf: (1620, 89), test_gdf: (1612, 89)
train_original: (500, 6), test_original: (500, 5)
train_gdf: (1620, 89), test_gdf: (1612, 89)
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 500/500 [00:10<00:00, 45.78it/s]
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 500/500 [00:11<00:00, 44.96it/s] 
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\train.py:519: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_gdf['Target'] = eq_targets
c:\Users\Edin\OneDrive - University of Edinburgh\Study\GEO-AI\train.py:524: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test_gdf['Target'] = eq_targets
Fitting 5 folds for each of 500 candidates, totalling 2500 fits
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.770 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.780 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.890 total time= 1.6min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 2.6min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 2.7min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.840 total time= 2.9min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.760 total time= 3.1min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 3.2min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.870 total time= 3.4min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.880 total time= 4.9min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.860 total time= 1.8min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 3.6min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.760 total time= 5.4min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 2.7min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 2.3min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time= 5.1min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 3.5min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 1.7min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 1.9min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.840 total time= 2.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.790 total time= 5.7min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 2.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.830 total time= 2.4min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.880 total time= 1.6min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.870 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.890 total time= 3.0min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.840 total time= 1.7min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.770 total time= 1.7min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 2.9min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.780 total time= 1.7min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 2.5min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.760 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.880 total time= 2.1min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.890 total time= 2.2min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.830 total time= 2.7min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.780 total time= 3.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.790 total time= 3.2min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.880 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.820 total time= 2.6min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.770 total time= 2.8min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.870 total time= 2.7min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.850 total time= 4.1min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 3.8min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.850 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.780 total time= 3.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.890 total time= 5.4min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.780 total time= 5.4min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.9min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.770 total time= 5.7min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.870 total time= 2.5min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time= 2.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.850 total time= 2.3min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time= 2.2min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.810 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.770 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.870 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.880 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.830 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.760 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.780 total time= 1.0min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.910 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.760 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.800 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.840 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.770 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.780 total time= 4.2min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.860 total time= 1.8min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.820 total time= 1.8min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.880 total time= 1.8min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.780 total time= 2.3min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.840 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.760 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time= 1.8min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.830 total time= 6.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.880 total time= 6.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.890 total time= 6.9min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.770 total time= 1.5min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.780 total time= 7.5min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.890 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.860 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.830 total time= 1.9min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.780 total time= 1.9min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 2.1min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.770 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.790 total time= 1.7min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.870 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.880 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.770 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.820 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.870 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.760 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 1.5min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.870 total time= 1.9min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.770 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.9min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 2.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.770 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 1.6min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.850 total time= 2.6min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.870 total time= 1.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.840 total time= 1.5min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.850 total time= 2.6min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 2.7min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.880 total time= 2.7min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.790 total time= 2.8min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 3.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.890 total time= 3.1min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.760 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.770 total time= 3.2min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.840 total time= 2.2min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.880 total time= 4.8min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 2.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 2.9min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 5.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.780 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 5.1min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.820 total time= 1.6min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.880 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 5.5min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.780 total time= 5.5min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.890 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.820 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.780 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.870 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.750 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.900 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 3.5min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.830 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 3.1min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.770 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 3.8min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.870 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.840 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 3.6min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.870 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 4.0min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.890 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.760 total time= 1.5min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.870 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.790 total time= 1.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.850 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.810 total time= 2.4min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 1.7min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.770 total time= 2.7min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.840 total time= 1.8min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.780 total time= 2.4min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 3.0min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.850 total time= 2.7min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.780 total time= 1.9min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.880 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.890 total time= 2.1min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.780 total time= 2.5min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 1.7min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.5min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.780 total time= 1.6min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.880 total time= 2.2min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 2.7min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.780 total time= 2.3min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 2.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 2.2min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 3.2min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 3.8min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.800 total time= 3.5min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 3.2min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 2.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.770 total time= 3.1min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.780 total time= 4.1min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.810 total time= 2.3min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.870 total time= 2.6min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.800 total time= 2.7min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.880 total time= 3.3min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.810 total time= 7.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.870 total time= 7.2min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.780 total time= 7.4min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.850 total time= 4.5min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.790 total time= 7.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.770 total time= 4.8min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.840 total time= 8.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.780 total time=  58.3s
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.840 total time= 4.8min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.750 total time= 1.1min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.880 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.870 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.770 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.770 total time= 5.4min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.760 total time= 6.5min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 3.2min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.760 total time= 3.1min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.890 total time= 8.6min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.800 total time= 6.4min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.880 total time= 6.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.830 total time= 3.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 7.5min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.890 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 2.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.850 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 1.4min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.870 total time= 2.6min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.840 total time= 6.9min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.850 total time= 6.9min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.760 total time= 7.0min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 7.0min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 1.5min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 1.7min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.880 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.770 total time= 1.4min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.880 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.810 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 8.2min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.840 total time= 2.5min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.790 total time= 1.5min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 2.4min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.870 total time= 2.6min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.770 total time= 2.7min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.850 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.880 total time= 3.1min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.770 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.830 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 1.5min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.880 total time= 1.5min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.870 total time= 1.9min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 1.9min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.870 total time= 1.9min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 2.1min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 2.2min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.740 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.890 total time= 2.6min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.870 total time= 1.8min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 1.7min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.770 total time= 2.3min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 3.7min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.780 total time= 4.5min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.900 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.870 total time= 4.7min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.770 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.880 total time= 5.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=90;, score=0.810 total time= 5.3min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.850 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.890 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.740 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.870 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.830 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.790 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.770 total time= 2.1min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.830 total time= 5.8min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 6.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 3.1min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.880 total time= 3.5min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.790 total time= 3.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.850 total time= 3.3min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 8.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.860 total time= 7.4min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time= 4.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.880 total time= 2.1min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 7.8min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.770 total time= 2.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.810 total time= 2.0min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 3.4min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.850 total time= 2.1min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.780 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.890 total time= 5.6min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.860 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 4.3min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.860 total time= 1.8min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time= 4.2min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.770 total time=  59.4s
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.890 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.830 total time= 1.5min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.830 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.780 total time= 1.8min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.850 total time=  57.1s
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 1.5min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time=  59.3s
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.890 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.820 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.860 total time= 1.5min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.770 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.800 total time= 5.8min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.870 total time= 6.1min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.900 total time= 6.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 6.7min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.750 total time= 6.6min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.900 total time= 6.5min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.800 total time= 6.9min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 1.7min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.770 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.770 total time= 8.0min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.880 total time= 1.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.820 total time= 8.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 8.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.780 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 1.6min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.910 total time= 2.5min



time= 1.0min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 2.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.830 total time= 2.6min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=80;, score=0.890 total time= 2.6min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.810 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.870 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.860 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.810 total time= 2.3min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.810 total time= 2.4min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.820 total time= 2.9min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 2.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.840 total time= 3.0min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 3.1min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 2.9min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 3.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.870 total time= 3.6min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 2.9min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.830 total time= 3.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 2.7min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 2.7min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 2.5min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 1.5min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.890 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 1.1min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 2.5min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.830 total time= 2.3min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 2.1min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.830 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.820 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time=  59.5s
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.770 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.820 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 1.0min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.790 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.880 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.830 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.780 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.870 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 6.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 5.6min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time=  59.1s
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.0min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.0min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 6.2min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 1.7min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.830 total time= 7.0min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.820 total time= 2.0min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 2.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.880 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time= 8.4min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.850 total time= 1.9min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 1.9min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 2.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.890 total time= 2.1min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 2.7min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 2.5min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.850 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.830 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 2.6min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 2.5min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 2.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.810 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time= 5.9min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time=  58.4s
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.810 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.890 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.840 total time=  54.7s
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.880 total time= 5.9min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.810 total time= 6.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.810 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.820 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.890 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.820 total time= 6.9min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.790 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.780 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.790 total time= 7.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.810 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.880 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 1.5min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.850 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 2.1min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 3.3min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.900 total time= 2.5min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 2.7min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 2.8min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.860 total time= 3.7min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.770 total time= 3.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 3.6min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.860 total time= 3.8min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.870 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 4.7min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.810 total time= 3.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.850 total time= 2.5min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.870 total time= 3.0min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 2.5min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time= 2.8min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.800 total time= 3.0min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.810 total time= 3.0min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.860 total time= 2.9min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time= 3.2min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.810 total time= 3.9min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.790 total time= 1.7min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.810 total time= 1.8min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.870 total time= 2.0min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.880 total time= 1.8min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.770 total time= 4.7min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=80;, score=0.830 total time= 2.5min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.780 total time= 1.0min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.0min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.860 total time= 3.7min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 1.0min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.860 total time= 5.6min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 1.0min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.0min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.780 total time= 4.7min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.850 total time= 4.0min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.780 total time= 4.2min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.810 total time= 3.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.820 total time= 5.7min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.790 total time= 1.8min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.870 total time= 2.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.880 total time= 3.8min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 1.5min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.820 total time= 2.4min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.820 total time= 4.2min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.880 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.800 total time= 2.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.850 total time= 2.4min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.890 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.780 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.800 total time= 1.7min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.820 total time= 1.8min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.830 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.860 total time= 1.9min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.800 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 3.2min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.820 total time= 2.7min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.850 total time= 3.2min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time= 3.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.870 total time= 3.1min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.780 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.830 total time= 1.5min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.850 total time= 2.0min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.840 total time= 1.4min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 2.4min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 1.9min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.770 total time= 2.9min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 3.0min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.880 total time= 1.9min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 2.9min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.840 total time= 1.9min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.810 total time= 1.8min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.850 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 2.6min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.800 total time= 2.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.880 total time= 2.5min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.760 total time= 4.3min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.820 total time= 1.1min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.770 total time=  53.7s
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.840 total time=  54.5s
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.880 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.810 total time=  59.0s
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.870 total time= 4.9min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time=  51.8s
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.780 total time=  54.9s
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.780 total time=  57.2s
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time=  56.8s
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.840 total time=  56.6s
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.810 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.880 total time= 1.1min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.790 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.820 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.830 total time= 5.6min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.860 total time= 1.5min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.780 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.850 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.890 total time= 5.9min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.780 total time= 6.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.840 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 2.5min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.860 total time=  56.9s
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 1.5min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time=  59.6s
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.890 total time= 1.1min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 4.0min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.790 total time= 1.5min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.780 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.860 total time= 1.6min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.870 total time= 1.5min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 1.6min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 4.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 3.7min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 4.8min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 1.0min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.850 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=80;, score=0.900 total time= 1.0min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.780 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.860 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.890 total time= 1.3min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.850 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.780 total time= 1.7min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 1.5min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.860 total time= 1.6min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 1.5min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.780 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 5.6min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 5.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 5.3min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 6.5min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.820 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 9.2min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.820 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.840 total time= 5.6min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.770 total time= 6.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.830 total time= 5.7min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.830 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.890 total time= 5.7min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 6.5min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.890 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.790 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.860 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.820 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.890 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.820 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.830 total time= 6.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 6.2min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 6.5min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.770 total time= 1.4min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 2.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.840 total time= 2.2min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.850 total time= 7.3min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.870 total time= 1.9min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 1.8min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.910 total time= 1.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 2.9min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.880 total time= 2.8min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.820 total time= 3.1min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.850 total time= 2.8min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.860 total time= 2.3min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.890 total time= 9.0min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.790 total time= 2.7min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time= 2.4min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.860 total time= 2.2min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.830 total time= 2.8min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 2.3min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.770 total time= 2.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.780 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.800 total time= 2.3min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.810 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.850 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.820 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.810 total time= 2.8min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.900 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=auto, xgb__max_depth=8, xgb__n_estimators=100;, score=0.900 total time= 2.9min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 1.8min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 2.2min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 1.6min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 2.2min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.9min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 2.0min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.830 total time= 2.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 2.3min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 1.9min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.820 total time= 2.7min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.760 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 2.5min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.820 total time= 2.7min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.870 total time= 2.7min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 2.9min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.1min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 1.0min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 3.5min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time= 1.0min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.800 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.810 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=90;, score=0.850 total time= 1.1min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 1.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.3min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.850 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.860 total time= 7.2min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.880 total time= 6.4min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.800 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 1.2min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 7.5min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.860 total time= 2.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.780 total time= 2.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 2.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 3.1min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.760 total time= 2.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 2.2min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 2.7min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 2.7min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.880 total time= 2.8min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 3.0min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.880 total time= 2.9min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.810 total time= 2.2min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.790 total time= 2.7min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.860 total time= 2.1min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.780 total time= 2.8min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.870 total time= 6.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.820 total time= 2.9min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.810 total time= 2.7min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.800 total time= 7.3min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=800, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=90, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=90;, score=0.860 total time= 3.7min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.820 total time= 7.5min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.860 total time= 7.7min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=80;, score=0.880 total time= 3.1min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.890 total time= 2.9min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.0005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.830 total time= 8.8min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.850 total time= 1.7min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.810 total time= 1.6min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.820 total time= 2.1min
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.790 total time= 3.5min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.820 total time= 2.1min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=800, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=True, rf__max_depth=16, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=100;, score=0.890 total time= 1.8min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 2.9min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.810 total time= 3.5min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.830 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.790 total time= 1.1min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.790 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.890 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.001, n_jobs=-1, passthrough=False, rf__max_depth=14, rf__n_estimators=70, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.810 total time= 1.4min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.880 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=900, final_estimator__C=2.0, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(1000, 1000), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=9, xgb__n_estimators=100;, score=0.880 total time= 3.6min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.790 total time=  56.7s
[CV 1/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time=  54.1s
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.810 total time= 1.2min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=auto, xgb__max_depth=9, xgb__n_estimators=90;, score=0.860 total time= 1.2min
[CV 2/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.850 total time= 1.0min
[CV 4/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.800 total time=  58.2s
[CV 3/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.810 total time= 1.1min
[CV 5/5] END ab__learning_rate=1.2, ab__n_estimators=800, final_estimator__C=0.5, final_estimator__solver=lbfgs, mlp__hidden_layer_sizes=(100, 100, 100), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=False, rf__max_depth=16, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=80;, score=0.880 total time= 1.1min
[CV 4/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.790 total time= 1.1min
[CV 2/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.860 total time= 1.2min
[CV 1/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.800 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.850 total time= 1.3min
[CV 3/5] END ab__learning_rate=1.0, ab__n_estimators=1000, final_estimator__C=1.0, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=70, stack_method=auto, xgb__max_depth=10, xgb__n_estimators=80;, score=0.820 total time= 1.4min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.820 total time= 1.3min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.850 total time= 1.6min
[CV 2/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.880 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.800 total time= 1.7min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.5, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=15, rf__n_estimators=80, stack_method=predict_proba, xgb__max_depth=10, xgb__n_estimators=100;, score=0.870 total time= 1.7min
[CV 1/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.800 total time= 1.7min
[CV 3/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.790 total time= 1.4min
[CV 5/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.850 total time= 1.3min
[CV 4/5] END ab__learning_rate=1.1, ab__n_estimators=900, final_estimator__C=0.1, final_estimator__solver=liblinear, mlp__hidden_layer_sizes=(500, 500, 500), mlp__learning_rate_init=0.005, n_jobs=-1, passthrough=True, rf__max_depth=14, rf__n_estimators=90, stack_method=predict_proba, xgb__max_depth=8, xgb__n_estimators=90;, score=0.800 total time= 1.5min
